//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Ball Scripts/Ball Controls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @BallControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @BallControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Ball Controls"",
    ""maps"": [
        {
            ""name"": ""Ball"",
            ""id"": ""033beb2b-8231-40ee-9edb-a56ef927caa5"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""ceefd694-8cc8-4cb4-a34c-eb475ad467f0"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""fc7a3cb8-6ce2-4ecb-864d-865169dcd672"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Stomp"",
                    ""type"": ""Button"",
                    ""id"": ""03178e24-9948-4fce-8eef-efb732069968"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Camera_Move"",
                    ""type"": ""PassThrough"",
                    ""id"": ""5467450e-f69f-497e-97ad-afc9fe1ee547"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Free_Cursor"",
                    ""type"": ""Button"",
                    ""id"": ""9b4b25ad-c63f-4835-b89c-6982b8cb2eae"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""90ec70af-f71d-4d18-8a58-e83687976f37"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""e5be5ea5-e89d-4acc-8505-96f0b0dc961a"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KB+M"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""b08acc7f-81da-4154-b7da-6d910cba3347"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KB+M"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""1b01b1fa-a23c-4b06-8978-7957cd0a2519"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KB+M"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""eccee765-e56f-4a2a-9330-efcca803bcb9"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KB+M"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""ee5e1f9b-74e0-4961-a6bc-58813abb3eeb"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""ps4"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""af36eab6-f829-4059-a289-6d22e5ce4248"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KB+M"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""132dcaa8-86e1-4ffd-8224-fcbc150775af"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""ps4"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1f701345-f5da-45a1-b96d-0bab054fbc9d"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KB+M"",
                    ""action"": ""Stomp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ba90d332-f338-4a29-a7a5-4417f6d81911"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""ps4"",
                    ""action"": ""Stomp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5acfd54b-5478-46f8-8165-8362f1d3b210"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": ""InvertVector2"",
                    ""groups"": ""KB+M"",
                    ""action"": ""Camera_Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""21ca118a-0f19-456d-a137-34d0f61b1372"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""ps4"",
                    ""action"": ""Camera_Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2574e3db-c678-4e45-8b86-bd2a02aa0f47"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KB+M"",
                    ""action"": ""Free_Cursor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""319fb08c-71db-4f98-bebc-f1f413f40191"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""ps4"",
                    ""action"": ""Free_Cursor"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""KB+M"",
            ""bindingGroup"": ""KB+M"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""ps4"",
            ""bindingGroup"": ""ps4"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Ball
        m_Ball = asset.FindActionMap("Ball", throwIfNotFound: true);
        m_Ball_Movement = m_Ball.FindAction("Movement", throwIfNotFound: true);
        m_Ball_Jump = m_Ball.FindAction("Jump", throwIfNotFound: true);
        m_Ball_Stomp = m_Ball.FindAction("Stomp", throwIfNotFound: true);
        m_Ball_Camera_Move = m_Ball.FindAction("Camera_Move", throwIfNotFound: true);
        m_Ball_Free_Cursor = m_Ball.FindAction("Free_Cursor", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Ball
    private readonly InputActionMap m_Ball;
    private IBallActions m_BallActionsCallbackInterface;
    private readonly InputAction m_Ball_Movement;
    private readonly InputAction m_Ball_Jump;
    private readonly InputAction m_Ball_Stomp;
    private readonly InputAction m_Ball_Camera_Move;
    private readonly InputAction m_Ball_Free_Cursor;
    public struct BallActions
    {
        private @BallControls m_Wrapper;
        public BallActions(@BallControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Ball_Movement;
        public InputAction @Jump => m_Wrapper.m_Ball_Jump;
        public InputAction @Stomp => m_Wrapper.m_Ball_Stomp;
        public InputAction @Camera_Move => m_Wrapper.m_Ball_Camera_Move;
        public InputAction @Free_Cursor => m_Wrapper.m_Ball_Free_Cursor;
        public InputActionMap Get() { return m_Wrapper.m_Ball; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(BallActions set) { return set.Get(); }
        public void SetCallbacks(IBallActions instance)
        {
            if (m_Wrapper.m_BallActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_BallActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_BallActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_BallActionsCallbackInterface.OnMovement;
                @Jump.started -= m_Wrapper.m_BallActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_BallActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_BallActionsCallbackInterface.OnJump;
                @Stomp.started -= m_Wrapper.m_BallActionsCallbackInterface.OnStomp;
                @Stomp.performed -= m_Wrapper.m_BallActionsCallbackInterface.OnStomp;
                @Stomp.canceled -= m_Wrapper.m_BallActionsCallbackInterface.OnStomp;
                @Camera_Move.started -= m_Wrapper.m_BallActionsCallbackInterface.OnCamera_Move;
                @Camera_Move.performed -= m_Wrapper.m_BallActionsCallbackInterface.OnCamera_Move;
                @Camera_Move.canceled -= m_Wrapper.m_BallActionsCallbackInterface.OnCamera_Move;
                @Free_Cursor.started -= m_Wrapper.m_BallActionsCallbackInterface.OnFree_Cursor;
                @Free_Cursor.performed -= m_Wrapper.m_BallActionsCallbackInterface.OnFree_Cursor;
                @Free_Cursor.canceled -= m_Wrapper.m_BallActionsCallbackInterface.OnFree_Cursor;
            }
            m_Wrapper.m_BallActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Stomp.started += instance.OnStomp;
                @Stomp.performed += instance.OnStomp;
                @Stomp.canceled += instance.OnStomp;
                @Camera_Move.started += instance.OnCamera_Move;
                @Camera_Move.performed += instance.OnCamera_Move;
                @Camera_Move.canceled += instance.OnCamera_Move;
                @Free_Cursor.started += instance.OnFree_Cursor;
                @Free_Cursor.performed += instance.OnFree_Cursor;
                @Free_Cursor.canceled += instance.OnFree_Cursor;
            }
        }
    }
    public BallActions @Ball => new BallActions(this);
    private int m_KBMSchemeIndex = -1;
    public InputControlScheme KBMScheme
    {
        get
        {
            if (m_KBMSchemeIndex == -1) m_KBMSchemeIndex = asset.FindControlSchemeIndex("KB+M");
            return asset.controlSchemes[m_KBMSchemeIndex];
        }
    }
    private int m_ps4SchemeIndex = -1;
    public InputControlScheme ps4Scheme
    {
        get
        {
            if (m_ps4SchemeIndex == -1) m_ps4SchemeIndex = asset.FindControlSchemeIndex("ps4");
            return asset.controlSchemes[m_ps4SchemeIndex];
        }
    }
    public interface IBallActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnStomp(InputAction.CallbackContext context);
        void OnCamera_Move(InputAction.CallbackContext context);
        void OnFree_Cursor(InputAction.CallbackContext context);
    }
}
